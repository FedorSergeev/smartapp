plugins {
    id 'maven-publish'
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.palantir.docker" version "0.22.1"
    id "com.palantir.docker-run" version "0.22.1"
    id 'com.palantir.git-version' version '0.7.3'
    id 'java'
    id 'jacoco'
}

group 'ru.smaprtapp'
version '1.0-SNAPSHOT'
description = "application"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation project(':kafka-adapter')
    implementation project(':rest-adapter')
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.ignite:ignite-core:2.10.0'
    implementation 'org.apache.ignite:ignite-spring:2.10.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

docker {
    dependsOn build
    name "docker:5000/fed/${project.name}:${version}"
    files 'build/libs/application-1.0-SNAPSHOT.jar'
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}

dockerRun {
    name "${project.name}"
    image "docker:5000/fed/${project.name}:${version}"
    ports '8080:8087'
    clean true
}